#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
    tapping-term-ms = <450>;
    retro-tap;
};

/ {
    combos {
        compatible = "zmk,combos";

        colons {
            bindings = <&kp SEMI>;
            key-positions = <20 21>;
            layers = <0>;
        };

        quotes {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <33 32>;
            layers = <0>;
        };

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <38 41>;
        };

        rclk {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
            layers = <0>;
        };

        mclk {
            bindings = <&mkp MB3>;
            key-positions = <18 19>;
            layers = <0>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <20 21>;
            layers = <1 2>;
        };

        doublequote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <33 32>;
            layers = <1 2>;
        };

        mb4b {
            bindings = <&mkp MB4>;
            key-positions = <18 19>;
            layers = <3>;
        };

        mb5b {
            bindings = <&mkp MB5>;
            key-positions = <19 20>;
            layers = <3>;
        };

        mo4 {
            bindings = <&mo 4>;
            key-positions = <39 40>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        td: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&none>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E         &kp R        &kp T                                       &kp Y      &kp U        &kp I             &kp O                &kp P
&kp A       &kp S       &kp D         &kp F        &kp G           &mkp MB3       &kp TAB      &kp H      &kp J        &kp K             &kp L                &kp MINUS
&kp Z       &mt LALT X  &mt LSHFT C   &mt LCTRL V  &kp B           &mkp LCLK      &mo 4        &kp N      &mt RCTRL M  &mt RSHIFT COMMA  &mt LEFT_ALT PERIOD  &kp SLASH
&kp ESCAPE  &kp LCTRL   &kp LEFT_ALT  &lt 1 TAB    &kp LEFT_SHIFT  &lt 3 SPACE    &lt 2 ENTER  &kp LCTRL                                                      &kp LWIN
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        SIGNS {
            bindings = <
&kp EXCL      &kp AT          &kp HASH          &kp DOLLAR  &kp PERCENT                         &kp CARET      &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp QUESTION  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp PIPE    &kp SINGLE_QUOTE  &trans    &trans  &kp BACKSPACE  &kp PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS
&kp GRAVE     &kp LESS_THAN   &kp GREATER_THAN  &kp AMPS    &kp SEMI          &trans    &trans  &kp EQUAL      &kp ASTRK  &kp COMMA             &kp PERIOD             &kp SLASH
&trans        &trans          &trans            &trans      &trans            &trans    &trans  &trans                                                                 &trans
            >;
        };

        NUM_SIGNS {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3      &kp NUMBER_4  &kp N5                                      &kp NUMBER_6   &kp N7     &kp N8            &kp N9             &kp N0
&kp QUESTION  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp PIPE      &kp SINGLE_QUOTE  &kp LA(ESCAPE)    &trans  &kp BACKSPACE  &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS
&kp GRAVE     &kp LESS_THAN   &kp GREATER_THAN  &kp AMPS      &kp SEMI          &trans            &trans  &kp EQUAL      &kp ASTRK  &kp COMMA         &kp PERIOD         &kp SLASH
&trans        &trans          &trans            &trans        &trans            &trans            &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LS(LC(TAB)) LC(TAB)>;
        };

        SCROLL {
            bindings = <
&kp F1  &kp F2        &kp F3              &kp F4         &kp LS(LC(TAB))                        &kp HOME       &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp END
&kp F5  &kp F6        &kp F7              &kp F8         &kp LC(TAB)      &kp C_MUTE    &none   &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp DELETE
&kp F9  &mt LALT F10  &mt LEFT_SHIFT F11  &mt LCTRL F12  &kp LA(ESCAPE)   &trans        &none   &none          &kp RCTRL       &kp RSHIFT      &kp RIGHT_ALT    &kp INS
&trans  &trans        &trans              &trans         &trans           &trans        &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        DEVICES {
            bindings = <
&kp F13  &kp F14  &kp F15  &kp F16  &none                  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2     &bt BT_SEL 1   &bt BT_SEL 0
&kp F17  &kp F18  &kp F19  &kp F20  &none  &none    &none  &none         &none         &none            &none          &none
&kp F21  &kp F22  &kp F23  &kp F24  &none  &none    &none  &none         &kp RCTRL     &kp RIGHT_SHIFT  &kp RIGHT_ALT  &none
&none    &none    &none    &none    &none  &none    &none  &none                                                       &none
            >;
        };
    };
};
